# COMBINE GVCFs generated by SAREK (HaplotypeCaller). This consists of merging each sample vcf into one unique file per family. Afterwards, onve the gVCFs are merged, the joint call is carried out

find ../02-sarek/VariantCalling/ -name "HaplotypeCaller*.g.vcf.gz" > samples.list

#conda activate nf-core-sarek-2.6-fix-gatk for all steps.

mkdir 00-combine_gvcfs
mkdir 01-joint_call

echo 'qsub -V -b y -j y -cwd -N COMBINEGVCFs -q numerobis.q gatk CombineGVCFs \
	-R /processing_Data/bioinformatics/research/20201123_atos_RYC_HS23_AH-MJ_CT/REFERENCES/WholeGenomeFasta/Homo_sapiens_assembly38.fasta \
    -V samples.list \
    -O ./00-combine_gvcfs/family.g.vcf.gz ' > _00_combine_gvcfs.sh

#JOINT GENOTYPING on a cohort by providing a combined multi-sample GCVF from each family.

echo 'qsub -V -b y -j y -cwd -N JOINTCALL -q all.q gatk --java-options "-Xmx4g" GenotypeGVCFs \
      -R /processing_Data/bioinformatics/research/20201123_atos_RYC_HS23_AH-MJ_CT/REFERENCES/WholeGenomeFasta/Homo_sapiens_assembly38.fasta \
      -V ./00-combine_gvcfs/family.g.vcf.gz \
      -O ./01-joint_call/family.vcf.gz' > _01_joint_call.sh

#---------------------------------------------------------------------------------------------------------------------------------------------

# VARIANT FILTRATION based on quality scores

echo 'qsub -V -b y -j y -cwd -N SELSNPS -q all.q gatk SelectVariants \
     -V ./01-joint_call/family.vcf.gz \
     -select-type SNP \
     -O snps.vcf.gz' > _02_separate_snps.sh

echo 'qsub -V -b y -j y -cwd -N SELINDELS -q all.q gatk SelectVariants \
    -V ./01-joint_call/family.vcf.gz \
    -select-type INDEL \
    -O indels.vcf.gz' > _03_separate_indels.sh

echo 'gatk --java-options "-Xmx4g" VariantFiltration \
	-V snps.vcf.gz \
	-filter "QD < 2.0" --filter-name "QD2" \
	-filter "QUAL < 30.0" --filter-name "QUAL30" \
	-filter "SOR > 3.0" --filter-name "SOR3" \
	-filter "FS > 60.0" --filter-name "FS60" \
	-filter "MQ < 40.0" --filter-name "MQ40" \
	-filter "MQRankSum < -12.5" --filter-name "MQRankSum-12.5" \
	-filter "ReadPosRankSum < -8.0" --filter-name "ReadPosRankSum-8" \
	-O snps_filtered.vcf.gz' > _04_filter_snps.sh

echo 'gatk --java-options "-Xmx4g" VariantFiltration \
	-V indels.vcf.gz \
	-filter "QD < 2.0" --filter-name "QD2" \
	-filter "QUAL < 30.0" --filter-name "QUAL30" \
	-filter "FS > 200.0" --filter-name "FS200" \
	-filter "ReadPosRankSum < -20.0" --filter-name "ReadPosRankSum-20" \
	-O indels_filtered.vcf.gz' > _05_filter_indels.sh

echo 'qsub -V -b y -j y -cwd -N MERGEVCFS -q all.q gatk MergeVcfs \
	-I ./snps_filtered.vcf.gz \
	-I ./indels_filtered.vcf.gz \
	-O variants_fil.vcf.gz' > _06_merge_vcfs.sh

echo 'qsub -V -b y -j y- cwd -N GZIP -q all.q bgzip -d variants_fil.vcf.gz' > _07_gzip.sh

#---------------------------------------------------------------------------------------------------------------------------------------------

# SPLITTING into individual samples

cat ../../samples_id.txt | xargs -I % echo "qsub -V -b y -j y -cwd -N SPLITSAMPLES -q all.q bcftools view -c1 -Oz -s % -o %_new.vcf.gz variants_fil.vcf" > _08_split_samples.sh

cat ../../samples_id.txt | xargs -I % echo 'qsub -V -b y -j y -cwd -N GZIP -q all.q gzip -d %_new.vcf.gz' > _09_decompress.sh
